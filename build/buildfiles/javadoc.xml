<!--
=====================================================================
Copyright (c) 2003, Orbitz, All rights reserved.
Last modified by: $Author: bpontarelli $
$Revision: 1.3 $, $Date: 2004/07/30 16:23:07 $
=====================================================================

=== Dependencies ====================================================
Targets:
  compile: compile.xml
Properties:
  dir.docs: build.xml
  dir.javadoc: build.xml
  dir.src: build.xml
  javadoc.bottom: build.properties
  javadoc.project.name: build.properties
  url.javadoc.jdk: build.properties
  list.javadoc.packages: build.properties
=====================================================================

=== Description =====================================================
Does the javadocing of the source files
=====================================================================
-->
<project name="javadoc">
  <property name="java.files" value="**/*.java"/>
  <patternset id="java.files.pattern" includes="**/*.java"/>

  <!-- <target name="javadoc" depends="compile,check-javadoc-uptodate,java2html" -->
  <target name="javadoc" depends="-init-project-classpath,check-javadoc-uptodate"
          unless="javadoc.uptodate" description="Creates the Javadoc API documentation.">

    <!-- set a default value for javadoc.report.dir if not already set. -->
    <property name="junit.version" value="3.8.1"/>
    <property name="build.reports.dir" value="${basedir}"/>
    <!-- Note: do not overwrite reports.output.dir, otherwise several links would be broken. -->
    <property name="reports.output.dir" value="${build.reports.dir}/reports"/>
    <property name="javadoc.report.dir" value="${reports.output.dir}/javadoc"/>
    <property name="javadoc.excludepackagenames" value="com.dummy.test.doc-files.*"/>
    <mkdir dir="${javadoc.report.dir}"/>

    <delete>
      <fileset dir="${javadoc.report.dir}" excludes="**/*.gif" />
    </delete>

    <!-- =================================================================== -->
    <!-- Create JavaDoc Documentation                                        -->
    <!-- =================================================================== -->
    <javadoc packagenames="${list.javadoc.packages}" excludepackagenames="${javadoc.excludepackagenames}"
             sourcepath="${dir.src}" source="${build.source}" destdir="${javadoc.report.dir}"
             author="true" version="true" private="true" doctitle="&lt;h1&gt;${javadoc.project.name} javadocs&lt;/h1&gt;"
             windowtitle="${javadoc.project.name} API" bottom="${javadoc.bottom}" additionalparam="${javadoc.extra.params}" >
      <classpath refid="classpath.build"/>
      <!-- XDoclet Tags -->
      <tag name="hibernate.class" scope="all" description="Class:"/>
      <tag name="hibernate.id" scope="all" description="Id:"/>
      <tag name="hibernate.property" scope="all" description="Property:"/>
      <tag name="jsp.tag" scope="all" description="JSP Tag:"/>
      <tag name="jsp.attribute" scope="all" description="JSP Attribute:"/>
      <tag name="struts.action" scope="all" description="Mapping:"/>
      <tag name="struts.action-forward" scope="all" description="ActionForward:"/>
      <tag name="struts.form" scope="all" description="Form Name:"/>
      <tag name="struts.validator" scope="all" description="Validator:"/>
      <tag name="struts.validator-args" scope="all" description="Validator Args:"/>
      <tag name="struts.validator-var" scope="all" description="Validator Var:"/>
      <tag name="web.listener" scope="all" description="Listener:"/>
      <tag name="web.filter" scope="all" description="Filter:"/>
      <tag name="web.filter-init-param" scope="all" description="Init-Param:"/>
      <tag name="web.filter-mapping" scope="all" description="Mapping:"/>
      <tag name="web.servlet" scope="all" description="Servlet:"/>
      <tag name="web.servlet-init-param" scope="all" description="Init-Param:"/>
      <tag name="web.servlet-mapping" scope="all" description="Mapping:"/>

      <!-- Application frameworks -->
      <link href="http://jakarta.apache.org/commons/lang/api"/>
      <link href="http://struts.apache.org/1.x/struts-core/apidocs"/>
      <link href="http://static.springframework.org/spring/docs/2.5.x/api"/>
      <link href="http://www.hibernate.org/hib_docs/v3/api"/>

      <!-- Testing frameworks -->
      <link href="http://jakarta.apache.org/cactus/api/framework-13/"/>
      <link href="http://junit.sourceforge.net/javadoc/"/>
      <link href="http://strutstestcase.sf.net/api/"/>

      <!-- SDKs -->
      <link href="http://java.sun.com/j2se/1.4/docs/api/"/>
      <link href="http://java.sun.com/j2ee/sdk_1.3/techdocs/api/"/>
    </javadoc>
  </target>

  <target name="check-javadoc-uptodate">
    <uptodate property="javadoc.uptodate" targetfile="${javadoc.report.dir}/packages.html" >
      <srcfiles dir= "${dir.src}" includes="**/*.java" />
    </uptodate>
  </target>

  <!-- =================================================================== -->
  <!-- Converts Java Code into HTML                                          -->
  <!-- =================================================================== -->
  <target name="java2html" depends="compile" description="creates HTML pages of code for online viewing">
    <taskdef name="java2html" classname="de.java2html.anttasks.Java2HtmlTask"
             classpath="${ant.home}/lib/java2html.jar"/>
    <java2html destdir="${javadoc.report.dir}/code" style="eclipse"
               showLineNumbers="true" showFileName="true" showTableBorder="true"
               srcdir="${dir.src}" includes="**/*.java"/>
  </target>

  <!-- ===================================================================== -->
  <!-- Zip doc into a single file ready for Source Control                   -->
  <!-- ===================================================================== -->
  <target name="zipjavadoc" depends="javadoc" description="Zips the Javadoc API documentation into a single file.">
    <zip zipfile="${dir.docs}/javadoc.zip" basedir="${javadoc.report.dir}"/>
  </target>
</project>

