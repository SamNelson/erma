<!--
=== Description =====================================================
The targets in this file are used to run PMD or CPD on the
entire project.  Both do static source code analysis.

Report XML files are output to dir.target.

PMD detects probable bugs and various bad coding practices.
May take a long time to run, even 30 minutes on large projects.

CPD detects copied-and-pasted code.  Run in few seconds, even on
large projects.
=====================================================================
-->
<project name="pmd" xmlns:savant="antlib:net.java.savant.dep.ant">
  <import file="property-adapter.xml"/>

  <target name="pmd" depends="-init-pmd" description="Another static analysis utility used to find common Java bugs">
    <pmd rulesetfiles="rulesets/basic.xml,rulesets/braces.xml,rulesets/clone.xml,rulesets/codesize.xml,rulesets/controversial.xml,rulesets/coupling.xml,rulesets/design.xml,rulesets/favorites.xml,rulesets/finalizers.xml,rulesets/imports.xml,rulesets/javabeans.xml,rulesets/junit.xml,rulesets/logging-java.xml,rulesets/naming.xml,rulesets/strictexception.xml,rulesets/strings.xml,rulesets/unusedcode.xml"
         failOnRuleViolation="false"
         failOnError="false">
      <formatter type="xml" toFile="${pmd.report.dir}/pmd_report.xml"/>
      <formatter type="html" toFile="${pmd.report.dir}/index.html"/>
      <fileset dir="${dir.src}">
        <include name="**/*.java"/>
      </fileset>
    </pmd>
    <echo message="Wrote XML report to ${pmd.report.dir}/pmd_report.xml"/>
    <echo message="Wrote HTML report to ${pmd.report.dir}/index.html"/>
  </target>

  <target name="-init-pmd" depends="property-adapter">
    <savant:dependencies id="pmd.deps">
      <savant:artifactgroup type="classpath.deps">
        <savant:artifact name="pmd" group="sourceforge" projectname="pmd" version="3.9" type="jar"/>
        <savant:artifact name="asm" group="objectweb" projectname="asm" version="3.0" type="jar"/>
        <savant:artifact name="asm-tree" group="objectweb" projectname="asm" version="3.0" type="jar"/>
        <savant:artifact name="backport-util-concurrent" group="emory" projectname="backport-util-concurrent" version="3.0" type="jar"/>
        <!--
        <savant:artifact name="dom4j" group="sourceforge" projectname="dom4j" version="1.6.1" type="jar"/>
        <savant:artifact name="pmd" group="sourceforge" projectname="pmd" version="3.9" type="jar"/>
        <savant:artifact name="saxpath" group="sourceforge" projectname="saxpath" version="1.0" type="jar"/>
        <savant:artifact name="jaxen-core" group="codehaus" projectname="jaxen" version="1.0" type="jar"/>
        <savant:artifact name="xml-apis" group="apache" projectname="xerces" version="2.6.2" type="jar"/>
        <savant:artifact name="xercesImpl" group="apache" projectname="xerces" version="2.6.2" type="jar"/>
        -->
      </savant:artifactgroup>
    </savant:dependencies>

    <savant:dependencypath pathid="pmd.classpath.deps" types="classpath.deps">
      <savant:mmpcompatibility/>
      <savant:dependencies refid="pmd.deps"/>
      <savant:workflow refid="workflow"/>
    </savant:dependencypath>

    <!-- set a default value for pmd.report.dir if not already set. -->
    <property name="build.reports.dir" value="${basedir}"/>
    <!-- Note: do not overwrite reports.output.dir, otherwise several links would be broken. -->
    <property name="reports.output.dir" value="${build.reports.dir}/reports"/>
    <property name="pmd.report.dir" value="${reports.output.dir}/pmd"/>
    <property name="cpd.minimumTokenCount" value="100"/>
    <property name="cpd.language" value="java"/>
    <mkdir dir="${pmd.report.dir}"/>

    <taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask"
             classpathref="pmd.classpath.deps"/>
    <taskdef name="cpd" classname="net.sourceforge.pmd.cpd.CPDTask"
             classpathref="pmd.classpath.deps"/>
  </target>

  <target name="cpd" depends="-init-pmd" description="Static analysis to find copied and pasted code.">
    <cpd minimumTokenCount="${cpd.minimumTokenCount}" outputFile="${pmd.report.dir}/cpd_report.txt"
         language="${cpd.language}">
      <fileset dir="${dir.src}">
        <include name="**/*.java"/>
      </fileset>
    </cpd>
  </target>

</project>
