<!--
=====================================================================
Copyright (c) 2003, Orbitz, All rights reserved.
Last modified by: $Author$
$Revision$, $Date$
=====================================================================

=== Dependencies ====================================================
Targets:
  NONE
Properties:
  build.debug: .ant.properties
  build.deprecation: .ant.properties
  build.source: .ant.properties
  classpath.main: build.xml
  dir.compile: build.xml
  dir.src: build.xml
Custom Tasks:
  NONE
External Files:
  NONE
=====================================================================

=== Description =====================================================
These are the main compile targets for the source directorys which
are in <project-home>/src
=====================================================================
-->
<project name="compile">
  <property name="build.encoding" value="UTF-8"/>

  <presetdef name="compile-rmic">
    <rmic verify="verify"
          base="${dir.build}">
      <classpath refid="classpath.project"/>
    </rmic>
  </presetdef>

  <!--
      =====================================================================
      Compiles all source files to the build directory.  Also copies
      properties, xml, and dtd files in the source tree into the build tree.
      =====================================================================
  -->
  <target name="compile" depends="compile.main, compile.test" description="Compiles all src files to the build directory."/>

  <!--
      This target does nothing and is intended to be overridden in
      the project build.xml
  -->
  <target name="-init-project-classpath"/>

  <!-- Sub-target of compile.main that creates the directories -->
  <target name="compile.init" depends="-init-project-classpath">
    <!-- default to build.source if build.target is not defined  -->
    <property name="build.target" value="${build.source}"/>

    <echo>Compiling using java version: ${java.version} from path ${java.home}</echo>
    <mkdir dir="${dir.compile}"/>
    <mkdir dir="${dir.dist}"/>
    <mkdir dir="${dir.test.compile}"/>
  </target>

  <!-- Sub-target of compile that compiles all the main files -->
  <target name="compile.main" depends="compile.init">
    <!-- figure out if we need a jdk specific src path -->
    <available property="append.jdk.src.path" file="${dir.src}${ant.java.version}"/>
    <condition property="dir.src.jdk" value=":${dir.src}${ant.java.version}">
      <isset property="append.jdk.src.path"/>
    </condition>
    <condition property="dir.src.jdk" value="">
      <not>
        <isset property="append.jdk.src.path"/>
      </not>
    </condition>

    <!-- Compile from src to build directory -->
    <javac srcdir="${dir.src}${dir.src.jdk}"
           destdir="${dir.compile}"
           deprecation="${build.deprecation}"
           encoding="${build.encoding}"
           source="${build.source}"
           target="${build.target}"
           debug="${build.debug}"
           includeAntRuntime="false">
      <classpath>
        <path refid="classpath.build"/>
      </classpath>
    </javac>

    <!-- Move other files over to build directory -->
    <copy todir="${dir.compile}">
      <fileset dir="${dir.src}">
        <include name="**/*.properties"/>
        <include name="**/*.xml"/>
        <include name="**/*.dtd"/>
        <include name="**/*.tld"/>
        <include name="**/*.mbi"/>
        <exclude name="**/build.xml"/>
        <exclude name="**/new-build.xml"/>
      </fileset>
    </copy>
  </target>

  <!--
      This target does nothing and is intended to be overridden in
      the project build.xml
  -->
  <target name="-init-unittest-classpath"/>

  <!--
       Sub-target of compile that compiles all the test files.
       Will only run if the dir.test.src property is set in the main build file
  -->
  <target name="compile.test" depends="-init-unittest-classpath" if="dir.test.src">
    <!-- default to build.source if build.target is not defined  -->
    <property name="build.target" value="${build.source}"/>

    <available property="append.jdk.test.path" file="${dir.test.src}${ant.java.version}"/>
    <condition property="dir.test.jdk" value=":${dir.test.src}${ant.java.version}">
      <isset property="append.jdk.test.path"/>
    </condition>
    <condition property="dir.test.jdk" value="">
      <not>
        <isset property="append.jdk.test.path"/>
      </not>
    </condition>

    <!-- Compile from src to build directory -->
    <javac srcdir="${dir.test.src}${dir.test.jdk}"
           destdir="${dir.test.compile}"
           deprecation="${build.deprecation}"
           encoding="${build.encoding}"
           source="${build.source}"
           target="${build.target}"
           debug="${build.debug}"
           includeAntRuntime="false">
      <classpath>
        <path refid="classpath.build"/>
        <path refid="classpath.test"/>
      </classpath>
    </javac>

    <!-- Move other files over to build directory -->
    <copy todir="${dir.test.compile}">
      <fileset dir="${dir.test.src}">
        <include name="**/*.properties"/>
        <include name="**/*.xml"/>
        <include name="**/*.dtd"/>
        <include name="**/*.tld"/>
        <include name="**/*.mbi"/>
      </fileset>
    </copy>
  </target>

</project>
