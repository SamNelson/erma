<!--
=====================================================================
Copyright (c) 2003, Orbitz, All rights reserved.
Last modified by: $Author: sbhatti$
$Revision: 1.14 $, $Date: 2005/10/24 15:57:16 $
=====================================================================

=== Dependencies ====================================================
Targets:
  NONE
Properties:
  dir.test: build.xml
  dir.test.src: build.xml
Custom Tasks:
  NONE
External Files:
  NONE
=====================================================================

=== Description =====================================================
The targets in this file are used to run the JUnit tests for the
entire project
=====================================================================
-->
<project name="test" xmlns:savant="antlib:net.java.savant.dep.ant">

  <!-- =================================================================== -->
  <!-- This target runs all the tests in the current project               -->
  <!-- =================================================================== -->
  <target name="test" depends="compile,test-without-aspects" description="Runs all the JUnit tests"/>
  <target name="test-without-aspects">
    <!-- set defaults for testing properties if not defined by project's build file. -->
    <property name="build.reports.dir" value="${basedir}"/>
    <!-- Note: do not overwrite reports.output.dir, otherwise several links would be broken. -->
    <property name="reports.output.dir" value="${build.reports.dir}/reports"/>
    <property name="junit.report.dir" value="${reports.output.dir}/junit"/>
    <property name="dir.test.src" value="test/src"/>
    <property name="src.pattern" value="**/*Test.java"/>
    <property name="cactus.contextURL" value=""/>
    <property name="haltonfailure" value="yes"/>
    <property name="haltonerror" value="yes"/>
    <property name="net.sourceforge.cobertura.datafile" value="no.instrumentation.for.cobertura"/>
    <property name="test.jvm" value="${java.home}/bin/java"/>
    <property name="test.forkmode" value="once"/>
    <property name="orbitz.env" value="developmentenv"/>
    <property name="orbitz.applicationSet" value="web/shared"/>

    <test.macro dir.test.output="${junit.report.dir}"
                dir.src="${dir.test.src}"
                src.pattern="${src.pattern}"
                haltonfailure="${haltonfailure}"
                haltonerror="${haltonerror}"
                cactus.contextURL="${cactus.contextURL}"
                net.sourceforge.cobertura.datafile="${net.sourceforge.cobertura.datafile}"
                test.jvm="${test.jvm}"
                test.forkmode="${test.forkmode}"
                orbitz.env="${orbitz.env}"
                orbitz.applicationSet="${orbitz.applicationSet}"/>
  </target>

  <target name="singletest" depends="compile,test-single" description="Runs single JUnit test"/>
  <target name="test-single">
    <!-- set defaults for testing properties if not defined by project's build file. -->
    <property name="build.reports.dir" value="${basedir}"/>
    <!-- Note: do not overwrite reports.output.dir, otherwise several links would be broken. -->
    <property name="reports.output.dir" value="${build.reports.dir}/reports"/>
    <property name="junit.report.dir" value="${reports.output.dir}/junit"/>
    <property name="dir.test.src" value="test/src"/>
    <property name="unittest" value=""/>
    <property name="cactus.contextURL" value=""/>
    <property name="haltonfailure" value="yes"/>
    <property name="haltonerror" value="yes"/>
    <property name="net.sourceforge.cobertura.datafile" value="no.instrumentation.for.cobertura"/>
    <property name="test.jvm" value="${java.home}/bin/java"/>
    <property name="test.forkmode" value="once"/>
    <property name="orbitz.env" value="developmentenv"/>
    <property name="orbitz.applicationSet" value="web/shared"/>

    <test.macro dir.test.output="${junit.report.dir}"
                dir.src="${dir.test.src}"
                src.pattern="**/${unittest}.java"
                haltonfailure="${haltonfailure}"
                haltonerror="${haltonerror}"
                cactus.contextURL="${cactus.contextURL}"
                net.sourceforge.cobertura.datafile="${net.sourceforge.cobertura.datafile}"
                test.jvm="${test.jvm}"
                test.forkmode="${test.forkmode}"
                orbitz.env="${orbitz.env}"
                orbitz.applicationSet="${orbitz.applicationSet}"/>
  </target>

  <macrodef name="test.macro">
    <attribute name="dir.src" default="test/src/java"/>
    <attribute name="src.pattern" default="**/*Test.java"/>
    <attribute name="dir.test.output" default="target/test"/>
    <attribute name="classpath.id" default="classpath.test"/>
    <attribute name="cactus.contextURL" default=""/>
    <attribute name="net.sourceforge.cobertura.datafile" default="no.instrumentation.for.cobertura"/>
    <attribute name="haltonfailure" default="yes"/>
    <attribute name="haltonerror" default="yes"/>
    <attribute name="extra.path" default="/some/dir/which/should/not/have/been/using"/>
    <attribute name="test.jvm" default="${java.home}/bin/java"/>
    <attribute name="test.forkmode" default="once"/>
    <attribute name="orbitz.env" default="developmentenv"/>
    <attribute name="orbitz.applicationSet" default="web/shared"/>


    <sequential>
      <savant:dependencies id="orbitz-ant-cobertura.deps">
        <savant:artifactgroup type="classpath.deps">
          <savant:artifact name="cobertura" group="sourceforge" projectname="cobertura" version="1.9" type="jar"/>
        </savant:artifactgroup>
      </savant:dependencies>

      <savant:dependencypath pathid="cobertura.classpath.deps" types="classpath.deps">
        <savant:mmpcompatibility/>
        <savant:dependencies refid="orbitz-ant-cobertura.deps"/>
        <savant:workflow refid="workflow"/>
      </savant:dependencypath>

      <mkdir dir="@{dir.test.output}"/>
      <echo>Unit-test reports for @{src.pattern} will be saved in @{dir.test.output}</echo>
      <echo>Running tests with jvm: @{test.jvm}</echo>
      <delete>
        <fileset dir="@{dir.test.output}">
          <include name="TEST-*"/>
        </fileset>
      </delete>
      <junit printsummary="yes" fork="yes" forkmode="@{test.forkmode}" jvm="@{test.jvm}"
             haltonfailure="@{haltonfailure}" haltonerror="@{haltonerror}" failureproperty="tests.failed">
        <formatter type="xml" usefile="true"/>
        <formatter type="brief" usefile="false"/>
        <sysproperty key="@{net.sourceforge.cobertura.datafile}" file="cobertura.ser" />
        <jvmarg value="-Djava.protocol.handler.pkgs=com.sun.net.ssl.internal.www.protocol"/>
        <jvmarg value="-Djava.security.policy=/usr/local/java/jini2/conf/policy.all"/>
        <jvmarg value="-Dorbitz.applicationSet=@{orbitz.applicationSet}"/>
        <jvmarg value="-Dcactus.contextURL=@{cactus.contextURL}"/>
        <jvmarg value="-Dcom.sun.jini.reggie.proxy.debug=true"/>
        <jvmarg value="-Ddir.test.conf=${dir.test.conf}"/>
        <jvmarg value="-Dcom.sun.jini.join.debug=true"/>
        <jvmarg value="-Dorbitz.env=@{orbitz.env}"/>
        <jvmarg value="-Djava.awt.headless=true"/>
        <jvmarg value="-Dorbitz.props=/dev/null"/>
        <jvmarg value="-Xmx256m"/>

        <classpath>
          <pathelement location="@{extra.path}"/>
          <path refid="classpath.test"/>
          <path refid="cobertura.classpath.deps"/>
        </classpath>

        <batchtest fork="yes" todir="@{dir.test.output}">
          <fileset dir="@{dir.src}">
            <include name="@{src.pattern}"/>
          </fileset>
        </batchtest>
      </junit>

      <!--<junitreport todir="@{dir.test.output}">
        <fileset dir="@{dir.test.output}">
          <include name="TEST-*.xml"/>
        </fileset>
        <report format="frames" todir="@{dir.test.output}"/>
      </junitreport>-->
    </sequential>
  </macrodef>

</project>
